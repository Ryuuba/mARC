$date
	Wed Jun 29 18:37:16 2016
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 16 ! sum [15:0] $end
$var wire 1 " c15 $end
$var wire 1 # P $end
$var wire 1 $ G $end
$var reg 16 % a [15:0] $end
$var reg 16 & b [15:0] $end
$var reg 1 ' cin $end
$scope module adder16b_u $end
$var wire 16 ( a [15:0] $end
$var wire 16 ) b [15:0] $end
$var wire 1 ' cin $end
$var wire 16 * sum [15:0] $end
$var wire 4 + p [3:0] $end
$var wire 4 , g [3:0] $end
$var wire 4 - cgl_p [3:0] $end
$var wire 4 . cgl_g [3:0] $end
$var wire 2 / cgl_carry [2:1] $end
$var wire 3 0 carry [3:1] $end
$var wire 1 " c15 $end
$var wire 1 # P $end
$var wire 1 $ G $end
$scope begin genblk0001 $end
$scope begin genblk4 $end
$scope begin genblk0005 $end
$scope begin genblk8 $end
$scope module clc_u $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 " cin $end
$var wire 1 3 g $end
$var wire 1 4 p $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk005 $end
$scope begin genblk9 $end
$scope module clc_u $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 cin $end
$var wire 1 9 g $end
$var wire 1 : p $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk05 $end
$scope begin genblk9 $end
$scope module clc_u $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 1 ? g $end
$var wire 1 @ p $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk5 $end
$scope begin genblk6 $end
$scope module clc_u $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E g $end
$var wire 1 F p $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module cgl_u $end
$var wire 1 H G $end
$var wire 1 I P $end
$var wire 1 J cin $end
$var wire 4 K g [3:0] $end
$var wire 4 L p [3:0] $end
$var wire 3 M carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk10 $end
$scope module adder_u $end
$var wire 4 N a [3:0] $end
$var wire 4 O b [3:0] $end
$var wire 1 P cin $end
$var wire 4 Q sum [3:0] $end
$var wire 4 R p [3:0] $end
$var wire 4 S g [3:0] $end
$var wire 3 T carry [3:1] $end
$var wire 1 U P $end
$var wire 1 V G $end
$scope begin genblk0001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y cin $end
$var wire 1 Z g $end
$var wire 1 [ p $end
$var wire 1 \ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` g $end
$var wire 1 a p $end
$var wire 1 b sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 e cin $end
$var wire 1 f g $end
$var wire 1 g p $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module adder_u $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 P cin $end
$var wire 1 k g $end
$var wire 1 l p $end
$var wire 1 m sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module cgl_u $end
$var wire 1 V G $end
$var wire 1 U P $end
$var wire 1 P cin $end
$var wire 4 n g [3:0] $end
$var wire 4 o p [3:0] $end
$var wire 3 p carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk10 $end
$scope module adder_u $end
$var wire 4 q a [3:0] $end
$var wire 4 r b [3:0] $end
$var wire 1 s cin $end
$var wire 4 t sum [3:0] $end
$var wire 4 u p [3:0] $end
$var wire 4 v g [3:0] $end
$var wire 3 w carry [3:1] $end
$var wire 1 x P $end
$var wire 1 y G $end
$scope begin genblk0001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } g $end
$var wire 1 ~ p $end
$var wire 1 !" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 $" cin $end
$var wire 1 %" g $end
$var wire 1 &" p $end
$var wire 1 '" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 (" a $end
$var wire 1 )" b $end
$var wire 1 *" cin $end
$var wire 1 +" g $end
$var wire 1 ," p $end
$var wire 1 -" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module adder_u $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 s cin $end
$var wire 1 0" g $end
$var wire 1 1" p $end
$var wire 1 2" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module cgl_u $end
$var wire 1 y G $end
$var wire 1 x P $end
$var wire 1 s cin $end
$var wire 4 3" g [3:0] $end
$var wire 4 4" p [3:0] $end
$var wire 3 5" carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module adder_u $end
$var wire 4 6" a [3:0] $end
$var wire 4 7" b [3:0] $end
$var wire 1 ' cin $end
$var wire 4 8" sum [3:0] $end
$var wire 4 9" p [3:0] $end
$var wire 4 :" g [3:0] $end
$var wire 3 ;" carry [3:1] $end
$var wire 1 <" P $end
$var wire 1 =" G $end
$scope begin genblk0001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 >" a $end
$var wire 1 ?" b $end
$var wire 1 @" cin $end
$var wire 1 A" g $end
$var wire 1 B" p $end
$var wire 1 C" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" g $end
$var wire 1 H" p $end
$var wire 1 I" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk3 $end
$scope module adder_u $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 L" cin $end
$var wire 1 M" g $end
$var wire 1 N" p $end
$var wire 1 O" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module adder_u $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 ' cin $end
$var wire 1 R" g $end
$var wire 1 S" p $end
$var wire 1 T" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module cgl_u $end
$var wire 1 =" G $end
$var wire 1 <" P $end
$var wire 1 ' cin $end
$var wire 4 U" g [3:0] $end
$var wire 4 V" p [3:0] $end
$var wire 3 W" carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module carry_logic_u $end
$var wire 1 $ G $end
$var wire 1 # P $end
$var wire 1 ' cin $end
$var wire 4 X" g [3:0] $end
$var wire 4 Y" p [3:0] $end
$var wire 3 Z" carry [3:1] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 Z"
b0 Y"
b10 X"
b0 W"
b0 V"
b0 U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b10 5"
b0 4"
b1010 3"
02"
01"
00"
0/"
0."
0-"
0,"
1+"
0*"
1)"
1("
1'"
0&"
0%"
1$"
0#"
0""
0!"
0~
1}
0|
1{
1z
1y
0x
b10 w
b1010 v
b0 u
b100 t
0s
b1010 r
b1010 q
b0 p
b0 o
b0 n
1m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
b0 T
b0 S
b0 R
b1 Q
1P
b0 O
b0 N
b0 M
b0 L
b0 K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
b10 0
b0 /
b0 .
b0 -
b10 ,
b0 +
b101000000 *
b10100000 )
b10100000 (
0'
b10100000 &
b10100000 %
0$
0#
0"
b101000000 !
$end
#10
18
1>
b11 /
1"
1*"
1|
b111 M
1D
1J
0$
1s
1@"
b111 0
b111 Z"
1F"
1Y
1_
1L"
1#
1$"
b0 ,
b0 X"
0y
1e
b111 ;"
b111 W"
b111 w
b111 5"
b111 T
b111 p
1<"
1x
1U
0O"
0I"
0C"
02"
0-"
0'"
b0 t
0!"
0m
0h
0b
b0 Q
0\
b1111 +
b1111 Y"
1I
1S"
1N"
1H"
b1111 9"
b1111 V"
1B"
11"
0+"
1,"
1&"
b0 v
b0 3"
0}
b1111 u
b1111 4"
1~
1l
1g
1a
b1111 R
b1111 o
1[
0G
0A
0;
05
1Q"
1K"
1E"
1?"
1/"
0)"
1#"
0{
1j
1d
1^
1X
1F
1@
1:
b1111 -
b1111 L
14
b0 !
b0 *
b0 8"
0T"
b1111 7"
b101 r
b1111 O
1C
1=
17
12
1'
b1111111101011111 &
b1111111101011111 )
#20
