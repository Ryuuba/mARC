$date
	Fri Nov 18 12:36:28 2016
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 4 ! status [3:0] $end
$var wire 16 " result [15:0] $end
$var reg 16 # a [15:0] $end
$var reg 16 $ b [15:0] $end
$var reg 4 % opcode [3:0] $end
$scope module fu $end
$var wire 16 & a [15:0] $end
$var wire 16 ' b [15:0] $end
$var wire 4 ( opcode [3:0] $end
$var reg 17 ) carry [16:0] $end
$var reg 16 * result [15:0] $end
$var reg 4 + status [3:0] $end
$var integer 32 , i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 ,
b0 +
b1111 *
b111111110 )
b0 (
b1111 '
b11111111 &
b0 %
b1111 $
b11111111 #
b1111 "
b0 !
$end
#10
b10000 ,
b111111111 )
b11111111 "
b11111111 *
b1 %
b1 (
#20
b10000 ,
b1 !
b1 +
b111111110 )
b1111111100000000 "
b1111111100000000 *
b10 %
b10 (
#30
b10000 ,
b0 !
b0 +
b111111111 )
b11110000 "
b11110000 *
b11 %
b11 (
#40
b10000 ,
b111111110 )
b100001110 "
b100001110 *
b100 %
b100 (
#50
b10000 ,
b10 !
b10 +
b111111111 )
b0 "
b0 *
b101 %
b101 (
#60
b10000 ,
b0 !
b0 +
b111111110 )
b100001110 "
b100001110 *
b110 %
b110 (
#70
b10000 ,
b10 !
b10 +
b111111111 )
b0 "
b0 *
b111 %
b111 (
#80
b10000 ,
b0 !
b0 +
b111111110 )
b111011110001 "
b111011110001 *
b1000 %
b1000 (
#90
b10000 ,
b111111111 )
b1001 %
b1001 (
#100
b10000 ,
b111111110 )
b1010 %
b1010 (
#110
b10000 ,
b111111111 )
b1011 %
b1011 (
#120
b10000 ,
b111111110 )
b1100 %
b1100 (
#130
b10000 ,
b111111111 )
b1101 %
b1101 (
#140
b10000 ,
b111111110 )
b1110 %
b1110 (
#150
b10000 ,
b111111111 )
b1111 %
b1111 (
#160
b10000 ,
b111111110 )
b1111 "
b1111 *
b0 %
b0 (
#170
b10000 ,
b111111111 )
b11111111 "
b11111111 *
b1 %
b1 (
